# Java Gradle CircleCI 2.0 configuration file
# See: https://circleci.com/docs/language-java/
version: 2.1

orbs:
  azure-acr: circleci/azure-acr@0.2.1

executors:
  my-executor:
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: /tmp/workspace

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  print:
    executor: my-executor
    steps:
      - run: echo $AZURE_SP
      - run: echo $AZURE_SP_PASSWORD
      - run: echo $AZURE_SP_TENANT
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#docker-machine-macos-windows-executor
    executor: my-executor

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      
      - run: ./gradlew build -x test

      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: /tmp
          # Must be relative path from root
          paths:
            - workspace

  test:
    executor: my-executor
    
    steps:
      - attach_workspace:
      # Must be absolute path or relative path from working_directory
          at: /tmp
      # run tests!
      - run: ./gradlew test
      
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
          
      - store_test_results:
          path: ~/test-results



workflows:
  build_and_test:
    jobs:
      - print:
          context: org-global
      - build
      - test:
          requires:
            - build
      - azure-acr/build-and-push-image:
          requires:
            - build
            - test
          alternate-tenant: false 
          attach-workspace: true
          workspace-root: /tmp
          path: /tmp/workspace 
          login-server-name: pswacr.azurecr.io 
          registry-name: pswacr 
          repo: spring-demo-app
          context: org-global